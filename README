## Bootstrap a basic CRUD application with Play, Spring  and Hibernate JPA

This is a sample CRUD application that integrates Spring (As a Spring container allows to easily manage application-specific beans) and hibernate JPA with Play 2.5 framework.

Some important files to have a look at:
* app/Module.java 
  Play by default loads Module class present in the root package when the application starts. 
  PlayConfigReader and Global are binded as Eager Singletons here. This means, 
	    1. New PlayConfigReader and Global objects will be created only once. 
			2. Also they are created eagerly when the application starts up, rather than lazily when they are needed
                      
* app/configs/PlayConfigReader.java 
  Reads the entire application.conf. Now PlayConfigReader class can simply be imported from anywhere to access Play Framework   application.conf properties

* app/configs/Global.java 
  Sets up the Spring application context

conf/routes specifies APIs for basic CRUD operations. To test these APIs you need to :
1. Set the following parameters in application.conf
    db {
      default.driver		=
      default.url		=
      default.username	=
      default.password 	= 
    }

2. Also create a test_table using the query below:
    CREATE TABLE `test_table` (
      `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
      `name` varchar(20) DEFAULT NULL,
      `url` varchar(2048) NOT NULL DEFAULT '',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


 
